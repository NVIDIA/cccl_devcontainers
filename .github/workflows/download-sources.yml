name: Download devcontainer image package sources

on:
  workflow_call:
    inputs:
      matrix:
        type: string
        required: true
      repo:
        type: string
        required: true
        description: Image repository

jobs:

  download-sources:
    name: Download apt sources
    runs-on: ${{ fromJSON(github.repository != 'NVIDIA/cccl_devcontainers' && '"ubuntu-latest"' || format('{{"labels":["self-hosted", "linux", "{0}", "cpu4"]}}', matrix.arch)) }}
    permissions:
      packages: write
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm64]
    steps:
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup runner environment
        uses: ./.github/actions/setup-runner-env

      - name: Download apt sources
        shell: bash --noprofile --norc -x -eo pipefail {0}
        run: |
          mkdir -p "${{ runner.temp }}/${{ matrix.arch }}-srcs";

          cat <<"EOF" > "${{ runner.temp }}/download-srcs.sh"
          set -x;
          pwd;
          ls -all .;
          find /etc/apt -type f -name '*.list' -exec sed -i -E 's/^# deb-src/deb-src/g' {} \;
          find /etc/apt -type f -name '*.list' -exec grep -H deb-src {} \;
          dpkg --get-selections | grep -v deinstall | cut -f1 \
            | xargs -t -r -d'\n' -I% -n1 -P$(nproc) bash -c "apt source % || true"
          EOF

          repo="$(echo '${{ inputs.repo }}' | tr '[:upper:]' '[:lower:]')";
          tags="$(echo '${{ inputs.matrix }}' | jq -r '.include | map(.tag + "-" + .os)[]')";
          VERSION="$(git describe --abbrev=0 --tags | sed 's/[a-zA-Z]//g' | cut -d '.' -f -2)";

          for tag in ${tags}; do
            tag="$(echo "${VERSION:-latest}-${tag}" | tr -d :)";
            # Download apt sources
            docker run --rm -tu root -w /tmp/src \
              --platform linux/${{ matrix.arch }} \
              -v "${{ runner.temp }}/${{ matrix.arch }}-srcs:/tmp/src" \
              -v "${{ runner.temp }}/download-srcs.sh:/usr/bin/download-srcs.sh" \
              ghcr.io/${repo}:${tag} /bin/bash /usr/bin/download-srcs.sh;
            # Show current files
            ls -all ${{ runner.temp }}/${{ matrix.arch }}-srcs/;
            # Free up disk space
            docker rmi ghcr.io/${repo}:${tag} || true;
          done

      - name: Upload ${{ matrix.arch }}-srcs
        uses: actions/upload-artifact@v3
        with:
          retention-days: 1
          name: ${{ matrix.arch }}-srcs
          path: ${{ runner.temp }}/${{ matrix.arch }}-srcs
